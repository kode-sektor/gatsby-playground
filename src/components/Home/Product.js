import React from 'react'
import Img from 'gatsby-image';

export default function Product({product}) {
    return (
        <div className="col-10 col-sm-8 col-md-6 col-lg-4 mx-auto my-3">
            <div className="card" style={{minHeight : '100%'}}>
                <img fluid={product.image.fluid} className="card-img-top"/>
                <div className="card-body text-center">
                    <h5>{product.title}</h5>
                    <h6>$ {product.price}</h6>

                    <button className="btn btn-yellow mt-3 text-capitalize snipcart-add-item"
                        data-item-id={product.id} data-item-name={product.title} data-item-price={product.price}
                        // For data-item-url, basically insert the page where this buy call-to-action button lives.
                        // In the project its localhost:8000 but live, it is https://romantic-lalande-cd15b1.netlify.app/
                        // Both work, but the latter is more appropriate
                        data-item-image={product.image.fluid.src} data-item-url="https://romantic-lalande-cd15b1.netlify.app/"
                        data-item-description="Dummy description"

                        // Responsible for inserting a text field (default custom type) if 
                        // data-item-custom1-options is not provided. User can engrave custom message on product
                        data-item-custom1-name="Coffee Variant"

                        // Add default text field value
                        // data-item-custom1-value="The Espresso Flavour"

                        // Does not work
                        // data-item-custom1-placeholder="The Espresso Flavour"

                        // DROPDOWN
                        // Requires a data-item-custom1-name
                        // data-item-custom1-options="Espresso|Cappuccino ($5+)[+5.00]|Latte ($10+)[+10.00]"    

                        // TEXTAREA 
                        // Not compatible with data-item-custom1-options
                        // data-item-custom1-type="textarea" 
                        // data-item-custom1-value="The Espresso Flavour" 

                        // Checkbox custom type
                        // data-item-custom1-type="checkbox"

                        // For read only
                        // data-item-custom1-type="readonly"
                        // data-item-custom1-value="This is a readonly custom field"

                        // Multiple custom fields (Add "custom2-name")
                        // data-item-custom2-name="Gift note"

                        // This will validate that the value entered by the customer is not empty or whitespace
                        // data-item-custom1-required="true"

                        // Initial starting quantity in Cart
                        // data-item-quantity="2"

                        // Maximum quantity allowed
                        // data-item-max-quantity="50" // Best to set maximum allowed in inventory

                        // Minimum quantity allowed 
                        // data-item-min-quantity="0"

                        // Number of increment / decrement steps
                        // data-item-quantity-step="3"

                        // Not working: All shipping options will be removed from the cart if you only 
                        // have non-shippable items in it.
                        data-item-shippable="false"

                        // DIMENSIONS (Only work with Integrated Shipping Provider):

                        // data-item-weight="24"
                        // data-item-length="24"
                        // data-item-height="24"
                        // data-item-width="24"

                        // DIGITAL GOOD: 
                        // Use this attribute if your product is related to a digital good uploaded via our 
                        // dashboard. You will find the file GUID in the dashboard once the digital good is created.
                        // (Not working yet)
                        data-item-file-guid="33b292b0-2585-47b0-8a3b-2af6443e4848"

                        // TAXES: 

                        // Include / Exclude from tax calculation. Defaults to true
                        data-item-taxable="false"

                        // Tax type
                        // The value must be the same name that is defined in the dashboard.
                        // You can also use your tax's unique ID that is generated by your tax rule
                        // available in the URL when editing a tax in the dashboard
                        // data-item-taxes="TPS|TVQ"    

                        // Set this flag to true if taxes defined are included in your product prices.
                        // (Don't really understand)
                        // data-item-has-taxes-included="false"

                        // CHANGING PROPERTY VALUES (DON'T CHANGE PRICE)

                        // const quantity = document.querySelector('#quantity')
                        // quantity.addEventListener('change', () => {
                        // // Sets the default quantity when adding the item
                        // button.setAttribute('data-item-quantity', quantity.value)
                        // })

                        >  
                        Add to Cart
                    </button>

                </div>
            </div>
        </div>
    )
}
